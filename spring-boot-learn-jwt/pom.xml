<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">


	<modelVersion>4.0.0</modelVersion>
	<artifactId>spring-boot-learn-jwt</artifactId>

	<parent>
		<groupId>com.tianya.springboot</groupId>
		<artifactId>spring-boot-learn</artifactId>
		<version>1.0.0</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<!-- maven 时间格式 -->
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
	</properties>

	<dependencies>

		<!-- spring boot web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>


		<!-- 常用工具包 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.8.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.4</version>
		</dependency>


		<!-- JWT -->
		<dependency>
			<groupId>com.auth0</groupId>
			<artifactId>java-jwt</artifactId>
			<version>3.8.1</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>


		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>


		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.76</version>
		</dependency>



	</dependencies>


	<!-- 打包 -->
	<build>

		<!-- 定义资源 -->
		<resources>

			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>

			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>*.*</include>
				</includes>
				<!-- 把配置文件中的引用值转为实际值 ${}转成实际值 -->
				<filtering>true</filtering>
			</resource>

		</resources>

		<!-- 插件 -->
		<plugins>

			<!-- 1、打jar包 插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<!-- 排除配置文件，不打到jar包内 -->
					<excludes>
						<exclude>*.properties</exclude>
						<exclude>*.yml</exclude>
						<exclude>release-note</exclude>
					</excludes>

					<archive>
						<!-- 配置jar包中MANIFEST的配置 -->
						<manifest>
							<!-- 指定JAR中的classpath -->
							<!-- 也可以不指定，由启动脚本指定 -->
							<addClasspath>true</addClasspath>
							<!-- MANIFEST.MF中 class-path 加入前缀 -->
							<classpathPrefix>lib/</classpathPrefix>
							<!-- jar不包含唯一版本标识 -->
							<useUniqueVersions>false</useUniqueVersions>
							<!-- 指定入口主类 -->
							<mainClass>com.tianya.springboot.jwt.LearnJwtApplication</mainClass>
						</manifest>

						<!-- MANIFEST.MF中 class-path 加入当前资源文件目录 -->
						<manifestEntries>
							<Class-Path>./</Class-Path>
						</manifestEntries>
					</archive>

					<!-- 打的jar包最后输出的目录 -->
					<outputDirectory>${project.build.directory}</outputDirectory>

				</configuration>
			</plugin>

			<!-- 2、拷贝maven依赖的jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- 拷贝maven依赖的jar 的位置 -->
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<excludeTransitive>false</excludeTransitive>
							<stripVersion>false</stripVersion>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- 3、assembly插件 用来整体打包(包含配置文件、主jar、maven依赖的jar、脚本文件等) -->
			<!-- assembly可以整体打成一个 zip tar.gz等安装包 -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<!-- 打包的具体描述文件 -->
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<!-- 最终打的整体包的名称 -->
							<finalName>${project.artifactId}-install-${project.version}-${maven.build.timestamp}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>



		</plugins>



	</build>














</project>