

# DBTAB 分库分表 配置


spring:
  shardingsphere:
    datasource:
    
      # 配置数据库名称
      names: db1,db2
      
      # 配置具体数据库连接信息
      db1:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
        username: root
        password: mysql
      db2:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/test2?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
        username: root
        password: mysql
    sharding:
      tables:
        
        # 配置多个逻辑表
        t_order:
        
          # 配置 主键 列、及类型
          keyGenerator:
            column: order_id
            type: SNOWFLAKE
            
          # 配置 数据库 表规则
          actualDataNodes: db$->{1..2}.t_order_$->{1..2}
          
          # 分库策略（具体某张表的）
          databaseStrategy:
            inline:
              shardingColumn: create_user_id
              algorithmExpression: db$->{create_user_id % 2 + 1}
              
          # 分表策略
          tableStrategy:
            inline:
              sharding-column: order_id
              algorithm-expression: t_order_$->{order_id % 2 + 1}
              
      # 默认的 分库策略（针对所有表）
      #defaultDatabaseStrategy:
      #  inline:
      #    shardingColumn: create_user_id
      #    algorithmExpression: db$->{create_user_id % 2 + 1}
      
      # 广播表（公共配置表 所有数据源库都需要的表）
      # 新增|删除|更新：每个库都会新增|删除|更新
      # 查询：查询单库
      broadcastTables:
      - t_type_dict
      
      # 配置默认数据源
      defaultDataSourceName: db2
      
    # 配置 是否打印SQL 
    props:
      sql.show: true
      

  # 解决一个bean映射到多张表问题
  main:
    allow-bean-definition-overriding: true
   